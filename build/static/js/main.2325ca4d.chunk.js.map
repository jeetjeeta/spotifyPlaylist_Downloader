{"version":3,"sources":["helper.js","Playlist.js","constants.js","IndividualVideos.js","Spinner.js","Download.js","Result.js","App.js","index.js"],"names":["promiseSetTimeOut","time","Promise","resolve","setTimeout","Playlist","props","setIsLoading","setIsDownloadLinkAvailable","setPlaylistName","setBinname","setGatewayURLS","setUploadType","_useState","useState","_useState2","_slicedToArray","input","setInput","isInputDisabled","length","substr","_jsx","className","children","_jsxs","onChange","e","target","value","type","placeholder","concat","onClick","test","input1","fetch","method","mode","headers","body","JSON","stringify","playlistURL","then","res","json","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","mainData","_mainData$data","status","binname","playListName","gatewayURLS","uploadType","wrap","_context","prev","next","console","log","sent","state","abrupt","stop","_x","apply","arguments","catch","err","alert","IndividualVideos","quality","setDownloadLinks","tracks","split","Spinner","visible","text","classes","color","color1","Loader","height","width","timeout","style","class","Download","downloadLinks","playlistName","mainDownload","url","a","document","createElement","setAttribute","dispatchEvent","MouseEvent","ctrlKey","downloadIPFS","_ref2","_callee2","urlobj","title","blob","aHref","link","_context2","URL","createObjectURL","download","href","click","_x2","_ref3","_callee3","_iterator","_step","_context3","_createForOfIteratorHelper","s","n","done","t0","f","finish","Result","playlistLength","App","isDownloadLinkAvailable","_useState3","_useState4","isLoading","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","setPlaylistLength","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2325ca4d.chunk.js","sourcesContent":["const promiseSetTimeOut = (time) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport { promiseSetTimeOut };\r\n","import { useState } from \"react\";\r\nimport \"./Playlist.css\";\r\nimport { HOST } from \"./constants\";\r\nimport { promiseSetTimeOut } from \"./helper\";\r\n\r\nconst Playlist = (props) => {\r\n  const {\r\n    setIsLoading,\r\n    setIsDownloadLinkAvailable,\r\n    // setDownloadLinks,\r\n    setPlaylistName,\r\n    setBinname,\r\n    setGatewayURLS,\r\n    setUploadType,\r\n    // setPlaylistLength,\r\n  } = props;\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const generateLink = () => {\r\n    const regex = /http[s]?[:]\\/\\/open\\.spotify\\.com\\/playlist\\/.+[/?]/;\r\n    // const regexM = /http[s]?[:]\\/\\/m\\.youtube\\.com\\/playlist[?]list[=].+/;\r\n    if (!regex.test(input)) {\r\n      alert(\"Invalid playlist link\");\r\n      return;\r\n    }\r\n\r\n    let input1 = input;\r\n    // if (regexM.test(input)) {\r\n    //   input1 = input.replace(\"m\", \"www\");\r\n    // }\r\n\r\n    setIsLoading(true);\r\n    setIsDownloadLinkAvailable(false);\r\n    fetch(`${HOST}/getDownloadLinksPlaylist`, {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        playlistURL: input1,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(async (data) => {\r\n        console.log(data);\r\n\r\n        while (true) {\r\n          await promiseSetTimeOut(3000);\r\n          const res = await fetch(`${HOST}/getResponseState`);\r\n          const mainData = await res.json();\r\n          // .then((res) => res.json())\r\n          // .then((mainData) => {\r\n          console.log(\"mainData \", mainData);\r\n          if (mainData.state === false) {\r\n            await promiseSetTimeOut(20000);\r\n            continue;\r\n          }\r\n\r\n          // const { videoList, playListName, audioList } = mainData.data?.[0];\r\n          const { status, binname, playListName, gatewayURLS } = mainData.data;\r\n          const uploadType = mainData.data.type;\r\n          setUploadType(uploadType);\r\n          setIsLoading(false);\r\n          if (status != \"ok\") {\r\n            console.log(status);\r\n            setPlaylistName(playListName);\r\n\r\n            setBinname(binname);\r\n            setIsLoading(false);\r\n            // setIsDownloadLinkAvailable(true);\r\n            break;\r\n          }\r\n          // setDownloadLinks(videoList);\r\n          // setPlaylistLength(videoList.length);\r\n          setPlaylistName(playListName);\r\n\r\n          setIsDownloadLinkAvailable(true);\r\n          setIsLoading(false);\r\n\r\n          if (uploadType === \"ipfs\") {\r\n            setBinname(\"\");\r\n            setGatewayURLS(gatewayURLS);\r\n          } else {\r\n            setGatewayURLS([]);\r\n            setBinname(binname);\r\n          }\r\n\r\n          break;\r\n          // })\r\n        }\r\n      })\r\n\r\n      .catch((err) => {\r\n        // setDownloadLinks([]);\r\n        setPlaylistName(\"\");\r\n        // setPlaylistLength(0);\r\n        console.log(err);\r\n        setIsLoading(false);\r\n        setBinname(\"\");\r\n        setGatewayURLS([]);\r\n        alert(\"some error\");\r\n      });\r\n  };\r\n\r\n  const isInputDisabled = () => {\r\n    if (input.length >= 4 && input.substr(0, 4) === \"http\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <div className=\"playlistInput\">\r\n        <input\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n          className=\"inputLink\"\r\n          type=\"text\"\r\n          placeholder=\"Insert the url of spotify playlist\"\r\n        />\r\n        <button\r\n          className={`${isInputDisabled() ? \"disabled\" : \"\"}`}\r\n          onClick={isInputDisabled() ? () => {} : generateLink}\r\n        >\r\n          Generate Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","// export const HOST = \"http://localhost:8082\";\r\n// export const HOST = \"http://192.168.29.234:8081\";\r\n// export const HOST = \"https://puppettertest-production.up.railway.app\";\r\n// export const HOST = \"https://fine-pink-hen-kilt.cyclic.app\";\r\n// export const HOST = \"https://puppetter-test.vercel.app\";\r\n// export const HOST = \"https://puppeteer-test-zoqc.onrender.com\";\r\n// export const HOST = \"https://seasoned-pyrite-cent.glitch.me\";\r\n// export const HOST = \"https://21x48h.deta.dev\";\r\n\r\nexport const binHOST = \"https://filebin.net\";\r\n\r\nexport const HOST = \"\";\r\n","import { useState } from \"react\";\r\nimport \"./IndividualVideos.css\";\r\nimport { HOST } from \"./constants\";\r\nimport { promiseSetTimeOut } from \"./helper\";\r\n\r\nconst IndividualVideos = (props) => {\r\n  const {\r\n    quality,\r\n    type,\r\n    setIsLoading,\r\n    setIsDownloadLinkAvailable,\r\n    setDownloadLinks,\r\n    setPlaylistName,\r\n    setBinname,\r\n    setGatewayURLS,\r\n    setUploadType,\r\n  } = props;\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const generateLink = () => {\r\n    const regex = /http[s]?[:]\\/\\/open\\.spotify\\.com\\/track\\/.+[/?]/;\r\n    // const regex = /http[s]?[:]\\/\\/www\\.youtube\\.com\\/watch[?]v[=].+/;\r\n    // const regexM = /http[s]?[:]\\/\\/m\\.youtube\\.com\\/watch[?]v[=].+/;\r\n    if (!regex.test(input)) {\r\n      alert(\"Invalid spotify track link\");\r\n      return;\r\n    }\r\n\r\n    // if (!regex.test(input) ) {\r\n    //   alert(\"Invalid playlist link\");\r\n    //   return;\r\n    // }\r\n\r\n    // let input1 = input;\r\n    // if (regexM.test(input)) {\r\n    //   input1 = input.replace(\"m\", \"www\");\r\n    // }\r\n\r\n    const tracks = input.split(\",\");\r\n\r\n    setIsLoading(true);\r\n    setIsDownloadLinkAvailable(false);\r\n\r\n    fetch(`${HOST}/getDownloadLinksIndividual`, {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        tracks,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(async (data) => {\r\n        // debugger;\r\n        console.log(data);\r\n        while (true) {\r\n          await promiseSetTimeOut(1000);\r\n          const res = await fetch(`${HOST}/getResponseState`);\r\n          const mainData = await res.json();\r\n          // .then((res) => res.json())\r\n          // .then((mainData) => {\r\n          console.log(\"mainData \", mainData);\r\n          if (mainData.state === false) {\r\n            await promiseSetTimeOut(10000);\r\n            continue;\r\n          }\r\n\r\n          const { status, binname, gatewayURLS } = mainData.data;\r\n          const uploadType = mainData.data.type;\r\n\r\n          setUploadType(uploadType);\r\n          if (status != \"ok\") {\r\n            setPlaylistName(\"\");\r\n            setIsDownloadLinkAvailable(false);\r\n            setBinname(\"\");\r\n            setIsLoading(false);\r\n            break;\r\n          }\r\n\r\n          setIsLoading(false);\r\n          // if (mainData.data.length > 0) {\r\n          // setDownloadLinks(mainData.data);\r\n\r\n          setPlaylistName(\"songs\");\r\n\r\n          if (uploadType === \"ipfs\") {\r\n            setGatewayURLS(gatewayURLS);\r\n            setBinname(\"\");\r\n          } else {\r\n            setGatewayURLS([]);\r\n            setBinname(binname);\r\n          }\r\n\r\n          setIsDownloadLinkAvailable(true);\r\n          // }\r\n          break;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setDownloadLinks([]);\r\n        setPlaylistName(\"\");\r\n        setIsLoading(false);\r\n        setBinname(\"\");\r\n        alert(\"some error\");\r\n      });\r\n  };\r\n\r\n  const isInputDisabled = () => {\r\n    if (input.length >= 4 && input.substr(0, 4) === \"http\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"IndividualVideos\">\r\n      <div className=\"videosInput\">\r\n        <input\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n          className=\"inputLink\"\r\n          type=\"text\"\r\n          placeholder=\"Insert spotify track links separated by commas\"\r\n        />\r\n        <button\r\n          className={`${isInputDisabled() ? \"disabled\" : \"\"}`}\r\n          onClick={isInputDisabled() ? () => {} : generateLink}\r\n        >\r\n          Generate Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualVideos;\r\n","import \"./Spinner.css\";\r\n\r\n// use 'npm i react-loader-spinner@4.0.0\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n// expected props:\r\n// visible: boolean ,\r\n// classes: string,\r\n// color: string,\r\n// text: string\r\nfunction Spinner(props) {\r\n  const { visible, text, type } = props;\r\n  let classes = props.classes || \"\";\r\n  const color = props.color || \"#fff\";\r\n  let color1 = props.color;\r\n  //   console.log(\"is spinner visible: \", visible);\r\n  return (\r\n    <div className={`Spinner ${classes} ${visible ? \"\" : \"none\"}`}>\r\n      <Loader\r\n        type={type}\r\n        color={color}\r\n        height={50}\r\n        width={50}\r\n        timeout={0} //30 secs\r\n      />\r\n      <span style={color1 ? { color: color } : {}} class=\"Loading_Text\">\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import \"./Download.css\";\r\nimport { binHOST } from \"./constants\";\r\n\r\nconst Download = (props) => {\r\n  const {\r\n    downloadLinks,\r\n    playlistName,\r\n    type,\r\n    binname,\r\n    uploadType,\r\n    gatewayURLS,\r\n  } = props;\r\n\r\n  const promiseSetTimeOut = (time) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, time);\r\n    });\r\n  };\r\n\r\n  const mainDownload = async (url) => {\r\n    const a = document.createElement(\"a\");\r\n    a.setAttribute(\"href\", url);\r\n    a.setAttribute(\"target\", \"_blank\");\r\n    a.setAttribute(\"rel\", \"noopener noreferrer\");\r\n    // document.body.append(a);\r\n\r\n    // a.click();\r\n    a.dispatchEvent(new MouseEvent(\"click\", { ctrlKey: true }));\r\n    // document.body.remove(\"a\");\r\n    // window.open(url, \"_blank\").blur();\r\n    // if (type === \"audio\") {\r\n    //   await promiseSetTimeOut(3000);\r\n    // } else {\r\n    //   await promiseSetTimeOut(10000);\r\n    // }\r\n  };\r\n\r\n  const downloadIPFS = async (urlobj) => {\r\n    const { url, title } = urlobj;\r\n    const res = await fetch(url);\r\n    const blob = await res.blob();\r\n    const aHref = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = `${title}.mp3`;\r\n    link.href = aHref;\r\n    link.click();\r\n  };\r\n\r\n  const download = async () => {\r\n    if (uploadType === \"filebin\") {\r\n      const url = `${binHOST}/archive/${binname}/zip`;\r\n      mainDownload(url);\r\n      return;\r\n    }\r\n\r\n    console.log(gatewayURLS);\r\n\r\n    for (let urlobj of gatewayURLS) {\r\n      await downloadIPFS(urlobj);\r\n    }\r\n\r\n    // fetch(\"https://proxy.cors.sh/https://acme.com\", {\r\n    //   headers: {\r\n    //     \"x-cors-api-key\": \"temp_6ed182fc89f2d7dc756368139fed3299\",\r\n    //   },\r\n    // });\r\n\r\n    // const proxy = \"https://proxy.cors.sh\";\r\n    // const key = \"temp_6ed182fc89f2d7dc756368139fed3299\";\r\n\r\n    // const res = await fetch(\r\n    //   `http://www.whateverorigin.org/get?url=http://www.google.com`\r\n    // );\r\n    // const res = await fetch(`${binHOST}/archive/${binname}/zip`);\r\n    // const res = await fetch(`${proxy}/${binHOST}/archive/${binname}/zip`, {\r\n    //   headers: {\r\n    //     \"x-cors-api-key\": key,\r\n    //   },\r\n    // });\r\n    // const blob = res.blob();\r\n    // const url = URL.createObjectURL(blob);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Download\">\r\n      <button onClick={download}>Download</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","import \"./Result.css\";\r\n\r\nconst Result = (props) => {\r\n  return (\r\n    <div className=\"Result\">\r\n      <h3>{props.playlistName}</h3>\r\n      <p>\r\n        {props.playlistLength ? props.playlistLength : 0} videos found in\r\n        playlist\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport Playlist from \"./Playlist\";\r\nimport IndividualVideos from \"./IndividualVideos\";\r\nimport Spinner from \"./Spinner\";\r\nimport Download from \"./Download\";\r\n\r\nimport Result from \"./Result\";\r\n\r\nfunction App() {\r\n  const [isDownloadLinkAvailable, setIsDownloadLinkAvailable] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [quality, setQuality] = useState(\"480\");\r\n  const [type, setType] = useState(\"video\"); // ['audio','video']\r\n  const [binname, setBinname] = useState(\"\");\r\n  const [gatewayURLS, setGatewayURLS] = useState([]);\r\n  const [uploadType, setUploadType] = useState(\"ipfs\");\r\n\r\n  const [downloadLinks, setDownloadLinks] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"\"); // ['audios','videos','<actualName>']\r\n  const [playlistLength, setPlaylistLength] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Playlist\r\n        quality={quality}\r\n        type={type}\r\n        setIsLoading={setIsLoading}\r\n        setIsDownloadLinkAvailable={setIsDownloadLinkAvailable}\r\n        setDownloadLinks={setDownloadLinks}\r\n        setPlaylistName={setPlaylistName}\r\n        setPlaylistLength={setPlaylistLength}\r\n        setBinname={setBinname}\r\n        setGatewayURLS={setGatewayURLS}\r\n        setUploadType={setUploadType}\r\n      />\r\n      <div className=\"OR\">OR</div>\r\n      <div className=\"labelIndividualVideos\">\r\n        For downloading tracks separately\r\n      </div>\r\n      <IndividualVideos\r\n        quality={quality}\r\n        type={type}\r\n        setIsLoading={setIsLoading}\r\n        setIsDownloadLinkAvailable={setIsDownloadLinkAvailable}\r\n        setDownloadLinks={setDownloadLinks}\r\n        setPlaylistName={setPlaylistName}\r\n        setBinname={setBinname}\r\n        setGatewayURLS={setGatewayURLS}\r\n        setUploadType={setUploadType}\r\n      />\r\n      <Spinner\r\n        classes=\"center mgtop\"\r\n        visible={isLoading}\r\n        text={\"Loading\"}\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n      />\r\n      {isDownloadLinkAvailable ? (\r\n        <Download\r\n          type={type}\r\n          downloadLinks={downloadLinks}\r\n          playlistName={playlistName}\r\n          binname={binname}\r\n          uploadType={uploadType}\r\n          gatewayURLS={gatewayURLS}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {playlistLength != 0 ? (\r\n        <Result playlistName={playlistName} playlistLength={playlistLength} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}